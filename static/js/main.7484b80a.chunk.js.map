{"version":3,"sources":["app/app-reducer.ts","api/teams-api.ts","redux/actions/actions.ts","redux/reducers/profile.ts","redux/reducers/teamInfo.ts","redux/store.ts","consts/routes.ts","components/Button/Btn.tsx","features/TeamsList/Team/Team.tsx","assets/images/spin.svg","components/Spin/Spin.tsx","components/Container/Container.tsx","selectors/index.ts","features/TeamsList/TeamsList.tsx","assets/images/userImage.jpg","features/Profile/ProfileInfo/FavouriteTeam/FavouriteTeam.tsx","utils/getAvatarColor.ts","features/PlayersList/Player/Player.tsx","features/Profile/ProfileInfo/FavouritePlayer/FavooritePlayer.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","features/Profile/Profile.tsx","features/PlayersList/PlayersList.tsx","navigation/PublicRoutes/index.tsx","components/Nav/Nav.tsx","assets/images/eath.svg","i18n.ts","features/Header/Header.tsx","navigation/index.tsx","app/App.tsx","index.tsx","features/Profile/ProfileInfo/ProfileInfo.module.scss","features/TeamsList/Team/team.module.scss","features/Header/Header.module.scss","features/PlayersList/Player/player.module.scss","components/Button/Button.module.scss","components/Container/container.module.scss","features/Profile/ProfileInfo/FavouriteTeam/favouriteTeam.module.scss","features/Profile/ProfileInfo/FavouritePlayer/favouritePlayer.module.scss","components/Nav/nav.module.scss"],"names":["initState","fetching","instance","axios","create","baseURL","headers","TeamsAPI","get","teamId","fetchTeamsSaga","fetchPlayersSaga","addToFavoriteTeamSaga","addToFavoritePlayerSaga","removeTeamSaga","removePlayerSaga","actions","payload","type","name","playerId","id","put","call","res","teams","data","action","players","squad","initialState","favoriteTeams","favoritePlayers","reducers","combineReducers","teamInfoReducer","state","appReducer","profile","filteredStateByTeams","filter","i","filteredStateByPlayers","getStore","rootWatcher","persistConfig","key","storage","persistedReducer","persistReducer","sagaMiddleWare","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","takeEvery","run","route","Btn","onClick","title","className","s","addBtn","Team","dispatch","useDispatch","teamWrapper","to","style","textDecoration","color","zIndex","teamAvatar","src","alt","width","team","addTeamToFavourite","Spin","spin","Container","children","wrapper","getPlayers","getTeams","getFavouriteTeams","getFavouritePlayers","getFetching","TeamsList","useSelector","useEffect","right","map","FavouriteTeam","height","removeTeam","getAvatarColor","letter","charCode","charCodeAt","background","Player","avatarColors","toUpperCase","playerWrapper","PlayerAvatar","backgroundColor","Letter","player","addPlayerToFavourite","styled","div","p","FavouritePlayer","marginRight","fontSize","marginTop","removePlayer","ProfileInfo","teamsInfo","playersInfo","descriptionBlock","avatarWrapper","userImage","pageAvatar","infoWrapper","fullname","fontWeight","length","Profile","PlayersList","history","useHistory","useParams","fetchPlayers","push","PublicRoutes","publicRoutes","Component","path","props","exact","Nav","useTranslation","t","i18n","nav","langs","use","initReactI18next","init","resources","en","translation","ru","lng","debug","keySeparator","interpolation","escapeValue","Header","setCurrentLanguage","lang","changeLanguage","header","earth","eath","text","AppNavigator","useState","currentLanguage","App","ReactDOM","render","fallback","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.7484b80a.chunk.js","sourcesContent":["interface ICommonState {\n    fetching: boolean\n}\n\nconst initState = {\n    fetching: false,\n}\n\nexport const appReducer = (state: ICommonState = initState, action: ActionsType): ICommonState => {\n    switch (action.type) {\n        case 'APP/START_FETCHING': {\n            return {\n                ...state, fetching: true,\n            }\n        }\n        case 'APP/STOP_FETCHING': {\n            return {\n                ...state, fetching: false,\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n// export const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\n// export const setAppStatus = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\n// export const setAppInitialized = (value: boolean) => ({type: 'APP/SET-IS-INITIALIED', value} as const)\n\n\nexport const startFetching = () => ({type: 'APP/START_FETCHING'} as const)\nexport const stopFetching = () => ({type: 'APP/STOP_FETCHING'} as const)\n\nexport type StartFetchingActionType = ReturnType<typeof startFetching>\nexport type StopFetchingActionType = ReturnType<typeof stopFetching>\n\ntype ActionsType =\n    | StartFetchingActionType\n    | StopFetchingActionType\n\n","import axios from 'axios';\n\nconst settings = {\n    headers: {\n        'X-Auth-Token': '15a24cc3edfb4c64a66c0214e356ebe7',\n    },\n};\n\nconst instance = axios.create({\n    baseURL: 'https://api.football-data.org/v2/',\n    ...settings,\n});\n\n\nexport const TeamsAPI = {\n    getTeams() {\n        return instance.get<TeamsInfo>('competitions/2017/teams')\n    },\n    getPlayersOfCurrentTeam(teamId: number) {\n        return instance.get<PlayersInfo>(`teams/${teamId}`)\n    },\n\n}\n\n\n//types\n\nexport type TeamsInfo = {\n    count: number,\n    filters: {},\n    competition: {\n        id: number,\n        area: {\n            id: number, name: string\n        },\n        name: string,\n        code: string,\n        plan: string,\n        lastUpdated: string\n    },\n    season: {\n        id: number,\n        startDate: string,\n        endDate: string,\n        currentMatchday: number,\n        winner: null\n    },\n    teams: ITeam[]\n}\n\nexport interface ITeam {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    lastUpdated: string\n}\n\nexport type PlayersInfo = {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    activeCompetitions: [\n        {\n            id: number,\n            area: {\n                id: number,\n                name: string\n            },\n            name: string,\n            code: string,\n            plan: string,\n            lastUpdated: string\n        }\n    ],\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    squad: IPlayer\n}\n\nexport interface IPlayer {\n    id: number,\n    name: string,\n    position: string,\n    dateOfBirth: string,\n    countryOfBirth: string,\n    nationality: string,\n    shirtNumber: null,\n    role: string\n}\n","import {call, put} from \"redux-saga/effects\";\nimport {InferActionTypes} from \"../store\";\nimport {IPlayer, ITeam, TeamsAPI} from \"../../api/teams-api\";\nimport {startFetching, stopFetching} from \"../../app/app-reducer\";\n\nexport type ActionType = InferActionTypes<typeof actions>\n\n\nexport const actions = {\n    getTeams: (payload: ITeam[]) => ({\n        type: 'TEAMS/FETCH_TEAMS', payload\n    } as const),\n    getPlayers: (payload: IPlayer[]) => ({\n        type: 'TEAMS/FETCH_PLAYERS', payload\n    } as const),\n    addToFavoriteTeam: (name: string, teamId: number) => ({\n        type: 'FAVOURITES/ADD_TEAM', name, teamId\n    } as const),\n    addToFavoritePlayer: (name: string, playerId: number) => ({\n        type: 'FAVOURITES/ADD_PLAYER', name, playerId\n    } as const),\n    removeTeam: (id: number, name: string) => ({\n        type: 'FAVOURITES/REMOVE_TEAM', id, name\n    } as const),\n    removePlayer: (id: number, name: string) => ({\n        type: 'FAVOURITES/REMOVE_PLAYER', id, name\n    } as const)\n}\n\n//sagas\n\nexport function* fetchTeamsSaga() {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getTeams)\n    const teams = res.data.teams\n\n    yield put(actions.getTeams(teams))\n    yield put(stopFetching())\n\n}\n\nexport const fetchTeams = () => ({type: 'TEAMS/FETCH-TEAMS'})\n\nexport function* fetchPlayersSaga(action: ReturnType<typeof fetchPlayers>) {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getPlayersOfCurrentTeam, action.teamId)\n    const players = res.data.squad\n\n    yield put(actions.getPlayers(players))\n    yield put(stopFetching())\n\n}\n\nexport const fetchPlayers = (teamId: number) => ({type: 'TEAMS/FETCH-PLAYERS', teamId})\n\nexport function* addToFavoriteTeamSaga(action: ReturnType<typeof addTeamToFavourite>) {\n    yield put(actions.addToFavoriteTeam(action.name, action.teamId))\n\n}\n\nexport const addTeamToFavourite = (teamId: number, name: string) => ({type: 'FAVOURITES/ADD-TEAM', teamId, name})\n\nexport function* addToFavoritePlayerSaga(action: ReturnType<typeof addPlayerToFavourite>) {\n    yield put(actions.addToFavoritePlayer(action.name, action.playerId))\n\n}\n\nexport const addPlayerToFavourite = (playerId: number, name: string) => ({\n    type: 'FAVOURITES/ADD-PLAYER',\n    playerId,\n    name\n})\n\n\nexport function* removeTeamSaga(action: ReturnType<typeof removeTeam>) {\n    yield put(actions.removeTeam(action.id, action.name))\n}\n\nexport const removeTeam = (id: number, name: string) => ({type: 'FAVOURITES/REMOVE-TEAM', id, name})\n\nexport function* removePlayerSaga(action: ReturnType<typeof removeTeam>) {\n    yield put(actions.removePlayer(action.id, action.name))\n}\n\nexport const removePlayer = (id: number, name: string) => ({type: 'FAVOURITES/REMOVE-PLAYER', id, name})\n\n\n","import {ActionType} from \"../actions/actions\";\nimport produce from 'immer'\n\nexport interface IItem {\n    name: string,\n    id: number\n}\n\n\ntype InitialStateType = {\n    favoriteTeams: IItem[],\n    favoritePlayers: IItem[],\n\n}\n\nconst initialState: InitialStateType = {\n    favoriteTeams: [],\n    favoritePlayers: []\n}\n\nexport const profile = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case \"FAVOURITES/ADD_TEAM\":\n            let filteredStateByTeams = state.favoriteTeams.filter((i) => {\n                return i.id !== action.teamId\n            })\n            return {\n                ...state,\n                favoriteTeams: [...filteredStateByTeams, {name: action.name, id: action.teamId}]\n            }\n\n        case \"FAVOURITES/ADD_PLAYER\":\n            let filteredStateByPlayers = state.favoritePlayers.filter((i) => {\n                return i.id !== action.playerId\n            })\n            return {\n                ...state,\n                favoritePlayers: [...filteredStateByPlayers, {name: action.name, id: action.playerId}]\n            }\n        case \"FAVOURITES/REMOVE_TEAM\":\n            return {\n                ...state,\n                favoriteTeams: [...state.favoriteTeams.filter(i => i.id !== action.id)]\n            }\n        case \"FAVOURITES/REMOVE_PLAYER\":\n            return {\n                ...state,\n                favoritePlayers: [...state.favoritePlayers.filter(i => i.id !== action.id)]\n            }\n        default:\n            return state\n    }\n}\n","import {IPlayer, ITeam} from \"../../api/teams-api\";\nimport {ActionType} from \"../actions/actions\";\n\ntype InitialStateType = {\n    teams: ITeam[],\n    players: IPlayer[]\n}\n\nconst initialState:InitialStateType = {\n    teams: [],\n    players: []\n}\n\nexport const teamInfoReducer = (state:InitialStateType = initialState, action: ActionType):InitialStateType => {\n    switch (action.type) {\n        case 'TEAMS/FETCH_TEAMS':\n            return {\n                ...state, teams: action.payload\n            }\n        case 'TEAMS/FETCH_PLAYERS':\n            return {\n                ...state, players: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {applyMiddleware, compose} from 'redux';\nimport {combineReducers} from 'redux';\nimport {createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {takeEvery} from 'redux-saga/effects'\nimport {appReducer} from \"../app/app-reducer\";\nimport {\n    addToFavoritePlayerSaga,\n    addToFavoriteTeamSaga,\n    fetchPlayersSaga,\n    fetchTeamsSaga, removePlayerSaga,\n    removeTeamSaga\n} from \"./actions/actions\";\nimport {profile} from \"./reducers/profile\";\nimport {teamInfoReducer} from \"./reducers/teamInfo\";\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nlet reducers = combineReducers({\n    teamInfoReducer,\n    appReducer,\n    profile\n})\n\nexport type RootState = ReturnType<typeof reducers>\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\n\nexport const getStore = () => {\n    const persistConfig = {key: \"root\", storage};\n    const persistedReducer = persistReducer(persistConfig, reducers);\n\n    const sagaMiddleWare = createSagaMiddleware()\n\n// @ts-ignore\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleWare)));\n\n    const persistor = persistStore(store);\n\n    sagaMiddleWare.run(rootWatcher)\n\n    function* rootWatcher() {\n        yield takeEvery('TEAMS/FETCH-TEAMS', fetchTeamsSaga)\n        yield takeEvery('TEAMS/FETCH-PLAYERS', fetchPlayersSaga)\n        yield takeEvery('FAVOURITES/ADD-TEAM', addToFavoriteTeamSaga)\n        yield takeEvery('FAVOURITES/ADD-PLAYER', addToFavoritePlayerSaga)\n        yield takeEvery('FAVOURITES/REMOVE-TEAM', removeTeamSaga)\n        yield takeEvery('FAVOURITES/REMOVE-PLAYER', removePlayerSaga)\n    }\n\n    return {persistor, store};\n}\n\n","export const route = {\n    PLAYERS: \"/players/:teamId\",\n    TEAMS: \"/teams\",\n    USER: \"/profile\",\n};\n","import React from 'react';\n// @ts-ignore\nimport s from \"./Button.module.scss\";\n\ninterface IProps {\n    onClick: () => void,\n    title: string\n}\n\nexport const Btn = ({onClick, title}: IProps) => {\n    return (\n        <>\n            <button onClick={onClick} className={s.addBtn}>{title}</button>\n        </>\n    );\n};\n\n","import React, {useCallback, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\n// @ts-ignore\nimport s from './team.module.scss'\nimport {addTeamToFavourite} from \"../../../redux/actions/actions\";\nimport {Btn} from \"../../../components/Button/Btn\";\nimport {Link} from 'react-router-dom';\n\ninterface IProps {\n    name: string,\n    teamId: number,\n}\n\nexport const Team = ({name, teamId}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onClickAdd = () => {\n        dispatch(addTeamToFavourite(teamId, name))\n\n    }\n\n\n    return (\n        <div className={s.teamWrapper}>\n            <Link to={`/players/${teamId}`} style={{textDecoration: 'none', color: '#666666', zIndex: 1}}>\n                <div className={s.teamAvatar}>\n                    <img src={`https://crests.football-data.org/${teamId}.svg`} alt=\"team\" title={'team'}\n                         style={{width: 200}}/>\n                </div>\n            </Link>\n            <div className={s.team}>\n                <p>{name}</p>\n                <Btn onClick={onClickAdd} title={'+'}/>\n            </div>\n        </div>\n    );\n};\n","export default __webpack_public_path__ + \"static/media/spin.7019bd74.svg\";","import React from 'react';\n// @ts-ignore\nimport spin from '../../assets/images/spin.svg';\n\nexport const Spin = () => {\n    return (\n        <div className={'spin-wrapper'}>\n            <img src={spin}/>\n        </div>\n    );\n};\n","import React from 'react';\n// @ts-ignore\nimport s from './container.module.scss'\n\ninterface IProps {\n    children: any\n}\n\nexport const Container = ({children}: IProps) => {\n    return (\n        <div className={s.wrapper}>\n            {children}\n        </div>\n    );\n};\n\n","import {RootState} from \"../redux/store\";\n\nexport const getPlayers = (state: RootState) => state.teamInfoReducer.players\nexport const getTeams = (state: RootState) => state.teamInfoReducer.teams\nexport const getFavouriteTeams = (state: RootState) => state.profile.favoriteTeams\nexport const getFavouritePlayers = (state: RootState) => state.profile.favoritePlayers\nexport const getFetching = (state: RootState) => state.appReducer.fetching\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Team} from './Team/Team';\nimport {RootState} from \"../../redux/store\";\nimport {ITeam} from \"../../api/teams-api\";\nimport {Spin} from \"../../components/Spin/Spin\";\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport {fetchTeams} from \"../../redux/actions/actions\";\nimport {Container} from \"../../components/Container/Container\";\nimport {getTeams} from \"../../selectors\";\n\ninterface IProps {\n    fetching?: boolean,\n}\n\nexport const TeamsList = ({fetching}: IProps) => {\n    const teams = useSelector<RootState, ITeam[]>(getTeams)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchTeams())\n    }, [])\n\n    return (\n        <>\n            {\n                fetching && <Spin/>\n            }\n            <Fade right>\n                <Container>\n                    {teams.map(i => <Team name={i.name} key={i.id} teamId={i.id}/>)}\n                </Container>\n            </Fade>\n        </>\n    );\n};\n\n","export default __webpack_public_path__ + \"static/media/userImage.65de8185.jpg\";","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Btn} from '../../../../components/Button/Btn';\nimport {removeTeam} from \"../../../../redux/actions/actions\";\n// @ts-ignore\nimport s from './favouriteTeam.module.scss'\n\ninterface IProps {\n    name: string\n    id: number\n}\n\nexport const FavouriteTeam = ({name, id}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onRemove = () => {\n        dispatch(removeTeam(id, name))\n    }\n\n    return (\n        <div className={s.team}>\n            <div>\n                <img src={`https://crests.football-data.org/${id}.svg`} alt=\"team-logo\" title={'team-logo'}\n                     style={{width: 50, height: 50}}/>\n                <p>{name}</p>\n            </div>\n            <Btn onClick={onRemove} title={'x'}/>\n        </div>\n    );\n};\n\n","export const getAvatarColor = (letter: string) => {\n    // @ts-ignore\n    const charCode = letter.charCodeAt();\n    if (charCode >= 65 && charCode <= 73) {\n        return {\n            background: '#F5D6D9',\n            color: '#F38181',\n        };\n    }\n    if (charCode >= 74 && charCode <= 80) {\n        return {\n            background: '#F8ECD5',\n            color: '#F1A32F',\n        };\n    }\n    if (charCode >= 81 && charCode <= 90) {\n        return {\n            background: '#DAD5F8',\n            color: '#816CFF',\n        };\n    }\n    return {\n        background: '#E9F5FF',\n        color: '#2A86FF',\n    };\n};\n","import React from 'react';\n// @ts-ignore\nimport s from './player.module.scss'\nimport {addPlayerToFavourite, fetchPlayers} from \"../../../redux/actions/actions\";\nimport {Btn} from \"../../../components/Button/Btn\";\nimport {useDispatch} from \"react-redux\";\nimport {getAvatarColor} from '../../../utils/getAvatarColor';\nimport styled from 'styled-components';\n\ninterface IProps {\n    name: string,\n    playerId: number\n}\n\nexport const Player = ({name, playerId}: IProps) => {\n    const dispatch = useDispatch()\n    const avatarColors = getAvatarColor(name[0].toUpperCase());\n\n    const onClickAdd = () => {\n        dispatch(addPlayerToFavourite(playerId, name))\n    }\n\n    return (\n        <div className={s.playerWrapper}>\n            <PlayerAvatar style={{\n                backgroundColor: avatarColors.background\n            }}>\n                <Letter style={{color: avatarColors.color}}>\n                    {name[0].toUpperCase()}\n                </Letter>\n            </PlayerAvatar>\n            <div className={s.player}>\n                <p>{name}</p>\n                <Btn onClick={onClickAdd} title={'+'}/>\n            </div>\n        </div>\n    );\n};\n\n\nexport const PlayerAvatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 200px;\n\n`\n\nexport const Letter = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  margin-top: -1px;\n`\n\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {removePlayer} from \"../../../../redux/actions/actions\";\n// @ts-ignore\nimport s from './favouritePlayer.module.scss'\nimport {Btn} from \"../../../../components/Button/Btn\";\nimport {Letter, PlayerAvatar} from \"../../../PlayersList/Player/Player\";\nimport {getAvatarColor} from \"../../../../utils/getAvatarColor\";\n\ninterface IProps {\n    name: string\n    id: number\n}\n\nexport const FavouritePlayer = ({name, id}: IProps) => {\n    const dispatch = useDispatch()\n    const avatarColors = getAvatarColor(name[0].toUpperCase());\n\n    const onRemove = () => {\n        dispatch(removePlayer(id, name))\n    }\n\n    return (\n        <div className={s.player}>\n            <div>\n                <PlayerAvatar style={{\n                    backgroundColor: avatarColors.background,\n                    width: 50, height: 50, marginRight:10\n                }}>\n                    <Letter style={{color: avatarColors.color, fontSize: 20, marginTop: 23}}>\n                        {name[0].toUpperCase()}\n                    </Letter>\n                </PlayerAvatar>\n                <p>{name}</p>\n            </div>\n            <Btn onClick={onRemove} title={'x'}/>\n        </div>\n    );\n};\n\n","import React from 'react';\n// @ts-ignore\nimport s from './ProfileInfo.module.scss';\n// @ts-ignore\nimport userImage from \"../../../assets/images/userImage.jpg\";\nimport {IItem} from \"../../../redux/reducers/profile\";\nimport {FavouriteTeam} from \"./FavouriteTeam/FavouriteTeam\";\nimport {FavouritePlayer} from './FavouritePlayer/FavooritePlayer';\n\ninterface IProps {\n    teamsInfo: IItem[],\n    playersInfo: IItem[]\n}\n\nconst ProfileInfo = ({teamsInfo, playersInfo}: IProps) => {\n\n    return (\n        <div className={s.descriptionBlock}>\n            <div className={s.avatarWrapper}>\n                <img src={userImage} className={s.pageAvatar}/>\n            </div>\n            <div className={s.infoWrapper}>\n                <div className={s.fullname}>\n                    <p>Andrei Kulik</p>\n                </div>\n                <div className={s.teams}>\n                    <p style={{fontWeight: \"bold\"}}>Favourite teams: </p>\n                    {teamsInfo.length ? teamsInfo.map((i: IItem) => <FavouriteTeam key={i.id} name={i.name}\n                                                                                   id={i.id}/>) : 'no favourites'}\n                </div>\n                <div className={s.players}>\n                    <p style={{fontWeight: \"bold\"}}>Favourite players: </p>\n                    {playersInfo.length ? playersInfo.map((i: IItem) => <FavouritePlayer key={i.id} name={i.name}\n                                                                                         id={i.id}/>) : 'no favourites'}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IItem} from \"../../redux/reducers/profile\";\nimport {getFavouritePlayers, getFavouriteTeams} from \"../../selectors\";\n\n\nexport const Profile = () => {\n    const teamsInfo = useSelector<RootState, IItem[]>(getFavouriteTeams)\n    const playersInfo = useSelector<RootState, IItem[]>(getFavouritePlayers)\n\n    return (\n        <div>\n            <ProfileInfo teamsInfo={teamsInfo} playersInfo={playersInfo}/>\n        </div>\n\n    )\n\n}\n","import React, {useEffect} from 'react';\nimport {Player} from './Player/Player';\nimport {Spin} from \"../../components/Spin/Spin\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IPlayer} from \"../../api/teams-api\";\nimport {useHistory, useParams} from 'react-router-dom';\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport {Container} from \"../../components/Container/Container\";\nimport {fetchPlayers} from \"../../redux/actions/actions\";\nimport {getPlayers} from \"../../selectors\";\n\ninterface IProps {\n    fetching?: boolean,\n}\n\nexport const PlayersList = ({fetching}: IProps) => {\n    const players = useSelector<RootState, IPlayer[]>(getPlayers)\n\n    let history = useHistory();\n    const dispatch = useDispatch()\n\n    const {teamId} = useParams<{ teamId: string }>()\n\n    const handleClick = () => {\n        history.push(\"/teams\");\n    }\n    useEffect(() => {\n        dispatch(fetchPlayers(+teamId))\n    }, [teamId])\n\n    return (\n        <>\n            {\n                fetching && <Spin/>\n            }\n            <Fade right>\n                <Container>\n                    {players.map(i => <Player name={i.name} key={i.id} playerId={i.id}/>)}\n                </Container>\n            </Fade>\n            <button className={'button'} onClick={handleClick}>Back</button>\n        </>\n    );\n};\n\n","import {route} from \"../../consts/routes\";\nimport {Route, Switch, Redirect} from \"react-router-dom\";\nimport {TeamsList} from \"../../features/TeamsList/TeamsList\";\nimport {getFetching} from \"../../selectors\";\nimport {RootState} from \"../../redux/store\";\nimport {useSelector} from \"react-redux\";\nimport {Profile} from \"../../features/Profile/Profile\";\nimport {PlayersList} from \"../../features/PlayersList/PlayersList\";\n\n\nexport const PublicRoutes = () => {\n    const fetching = useSelector<RootState, boolean>(getFetching)\n\n    const publicRoutes = [\n        {\n            Component: TeamsList,\n            path: route.TEAMS,\n            props: {\n                fetching\n            },\n        },\n        {\n            Component: PlayersList,\n            path: route.PLAYERS,\n            props: {\n                fetching\n            },\n        },\n        {Component: Profile, path: route.USER},\n        {Component: () => <Redirect to={route.TEAMS}/>, path: \"*\"},\n    ];\n\n    return (\n        <Switch>\n            {publicRoutes.map(({Component, path, props}) => {\n                return (\n                    <Route exact path={path} key={path}>\n                        <Component {...props}/>\n                    </Route>\n                );\n            })}\n        </Switch>\n    );\n};\n","import React from 'react';\n// @ts-ignore\nimport style from './nav.module.scss';\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from 'react-router-dom';\n\ninterface IProps {\n\n}\n\n\nfunction Nav() {\n    const {t, i18n} = useTranslation()\n\n    return (\n        <div className={style.nav}>\n            <Link to={'/'}>{t('Teams list')}</Link>\n            <Link to={'/profile'}>{t('Profile')}</Link>\n        </div>\n    );\n}\n\nexport default Nav;\n","export default __webpack_public_path__ + \"static/media/eath.a2cbbb50.svg\";","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {initReactI18next} from 'react-i18next';\n\nexport const langs = ['en', 'ru']\n\nconst resources = {\n    en: {\n        translation: {\n            \"Teams list\": \"Teams list\",\n            \"Profile\": \"Profile\"\n\n        }\n    },\n    ru: {\n        translation: {\n            \"Teams list\": \"Список Команд\",\n            \"Profile\": \"Профиль\"\n        }\n    }\n};\n\ni18n\n    .use(initReactI18next) // passes i18n down to react-i18next\n    .init({\n        resources,\n        lng: \"en\",\n        debug: true,\n        keySeparator: false, // we do not use keys in form messages.welcome\n\n        interpolation: {\n            escapeValue: false // react already safes from xss\n        }\n    });\n\n\nexport default i18n;\n","import React from 'react';\n// @ts-ignore\nimport style from './Header.module.scss'\nimport Nav from '../../components/Nav/Nav';\nimport {useTranslation} from \"react-i18next\";\n// @ts-ignore\nimport eath from \"../../assets/images/eath.svg\";\nimport {langs} from \"../../i18n\";\n\ninterface IProps {\n    setCurrentLanguage: React.Dispatch<React.SetStateAction<number>>\n    lang: number\n}\n\nfunction Header({setCurrentLanguage, lang}: IProps) {\n    const {t, i18n} = useTranslation()\n\n    const changeLanguage = () => {\n        if (lang + 1 < langs.length) {\n            setCurrentLanguage(lang + 1)\n            i18n.changeLanguage(langs[lang + 1])\n\n        } else {\n            i18n.changeLanguage(langs[0])\n            setCurrentLanguage(0)\n        }\n    }\n\n\n    return (\n        <div className={style.header}>\n            <Nav/>\n            <div>\n                <div className={style.earth} onClick={() => changeLanguage()}>\n                    <img src={eath} alt=\"world\"/>\n                </div>\n                <p className={style.text} onClick={() => changeLanguage()}>\n                    {langs[lang].toUpperCase()}\n                </p>\n            </div>\n        </div>\n    );\n}\n\nexport default Header;\n","import {HashRouter} from \"react-router-dom\";\nimport {PublicRoutes} from \"./PublicRoutes\";\nimport React, {useState} from \"react\";\nimport Header from \"../features/Header/Header\";\n\n\nexport const AppNavigator = () => {\n    const [currentLanguage, setCurrentLanguage] = useState<number>(0)\n    return (\n        <HashRouter>\n            <Header setCurrentLanguage={setCurrentLanguage} lang={currentLanguage}/>\n            <div className=\"app-wrapper\">\n                <PublicRoutes/>\n            </div>\n        </HashRouter>\n    );\n};\n","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {useSelector} from \"react-redux\";\nimport {getStore, RootState} from \"../redux/store\";\nimport Header from \"../features/Header/Header\";\nimport {PersistGate} from 'redux-persist/integration/react';\nimport {getFetching} from \"../selectors\";\nimport {AppNavigator} from '../navigation';\n\n\nconst App = () => {\n\n    const {persistor} = getStore();\n\n    return (\n        <>\n            <PersistGate persistor={persistor}>\n                <AppNavigator/>\n            </PersistGate>\n        </>\n    );\n}\n\nexport default App;\n","import React, {Suspense} from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from \"./app/App\";\nimport {Provider} from 'react-redux';\nimport {getStore} from \"./redux/store\";\nimport './i18n';\n\nconst {store, persistor} = getStore();\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <Suspense fallback={false}>\n            <App/>\n        </Suspense>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AC4Jg\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__2F56J\",\"pageAvatar\":\"ProfileInfo_pageAvatar__2Maiq\",\"infoWrapper\":\"ProfileInfo_infoWrapper__2NIt1\",\"fullname\":\"ProfileInfo_fullname__1WDof\",\"teams\":\"ProfileInfo_teams__1w-9M\",\"players\":\"ProfileInfo_players__P3s44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamWrapper\":\"team_teamWrapper__2Z_hY\",\"teamAvatar\":\"team_teamAvatar__bQmU4\",\"team\":\"team_team__ZaEf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22rC9\",\"text\":\"Header_text__2Do-l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerWrapper\":\"player_playerWrapper__UbETO\",\"player\":\"player_player__3gfDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"Button_addBtn__v5veH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"container_wrapper__1_ssJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"team\":\"favouriteTeam_team__3jO_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"favouritePlayer_player__1gSCu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__VnbBu\"};"],"sourceRoot":""}