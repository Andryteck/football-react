{"version":3,"sources":["features/Profile/ProfileInfo/ProfileInfo.module.scss","features/TeamsList/Team/team.module.scss","features/PlayersList/Player/player.module.scss","components/Button/Button.module.scss","components/Container/container.module.scss","features/Header/Header.module.scss","components/Nav/nav.module.scss","features/Profile/ProfileInfo/FavouriteTeam/favouriteTeam.module.scss","features/Profile/ProfileInfo/FavouritePlayer/favouritePlayer.module.scss","api/teams-api.ts","app/app-reducer.ts","redux/actions/actions.ts","components/Button/Btn.tsx","utils/getAvatarColor.ts","features/PlayersList/Player/Player.tsx","assets/images/spin.svg","components/Spin/Spin.tsx","components/Container/Container.tsx","features/PlayersList/PlayersList.tsx","features/TeamsList/Team/Team.tsx","features/TeamsList/TeamsList.tsx","redux/reducers/profile.ts","redux/reducers/teamInfo.ts","redux/store.ts","components/Nav/Nav.tsx","features/Header/Header.tsx","assets/images/userImage.jpg","features/Profile/ProfileInfo/FavouriteTeam/FavouriteTeam.tsx","features/Profile/ProfileInfo/FavouritePlayer/FavooritePlayer.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","features/Profile/Profile.tsx","app/App.tsx","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","headers","TeamsAPI","get","teamId","initState","fetching","fetchTeamsSaga","fetchPlayersSaga","addToFavoriteTeamSaga","addToFavoritePlayerSaga","removeTeamSaga","removePlayerSaga","actions","payload","type","name","playerId","id","put","call","res","teams","data","action","players","squad","Btn","onClick","title","className","s","addBtn","getAvatarColor","letter","charCode","charCodeAt","background","color","Player","dispatch","useDispatch","avatarColors","toUpperCase","playerWrapper","PlayerAvatar","style","backgroundColor","Letter","player","addPlayerToFavourite","styled","div","p","Spin","src","spin","Container","children","wrapper","PlayersList","useSelector","state","teamInfoReducer","history","useHistory","useParams","useEffect","fetchPlayers","right","map","i","push","Team","teamWrapper","to","textDecoration","zIndex","teamAvatar","alt","width","team","addTeamToFavourite","TeamsList","initialState","favoriteTeams","favoritePlayers","reducers","combineReducers","appReducer","profile","filteredStateByTeams","filter","filteredStateByPlayers","getStore","rootWatcher","persistConfig","key","storage","persistedReducer","persistReducer","sagaMiddleWare","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","takeEvery","run","Nav","nav","href","Header","header","FavouriteTeam","height","removeTeam","FavouritePlayer","marginRight","fontSize","marginTop","removePlayer","ProfileInfo","teamsInfo","playersInfo","descriptionBlock","avatarWrapper","userImage","pageAvatar","infoWrapper","fullname","fontWeight","length","Profile","props","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.56b24f2f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AC4Jg\",\"avatarWrapper\":\"ProfileInfo_avatarWrapper__2F56J\",\"pageAvatar\":\"ProfileInfo_pageAvatar__2Maiq\",\"infoWrapper\":\"ProfileInfo_infoWrapper__2NIt1\",\"fullname\":\"ProfileInfo_fullname__1WDof\",\"teams\":\"ProfileInfo_teams__1w-9M\",\"players\":\"ProfileInfo_players__P3s44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamWrapper\":\"team_teamWrapper__2Z_hY\",\"teamAvatar\":\"team_teamAvatar__bQmU4\",\"team\":\"team_team__ZaEf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerWrapper\":\"player_playerWrapper__UbETO\",\"player\":\"player_player__3gfDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"Button_addBtn__v5veH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"container_wrapper__1_ssJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22rC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__VnbBu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"team\":\"favouriteTeam_team__3jO_3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"player\":\"favouritePlayer_player__1gSCu\"};","import axios from 'axios';\n\nconst settings = {\n    headers: {\n        'X-Auth-Token': '15a24cc3edfb4c64a66c0214e356ebe7',\n    },\n};\n\nconst instance = axios.create({\n    baseURL: 'https://api.football-data.org/v2/',\n    ...settings,\n});\n\n\nexport const TeamsAPI = {\n    getTeams() {\n        return instance.get<TeamsInfo>('competitions/2017/teams')\n    },\n    getPlayersOfCurrentTeam(teamId: number) {\n        return instance.get<PlayersInfo>(`teams/${teamId}`)\n    },\n\n}\n\n\n//types\n\nexport type TeamsInfo = {\n    count: number,\n    filters: {},\n    competition: {\n        id: number,\n        area: {\n            id: number, name: string\n        },\n        name: string,\n        code: string,\n        plan: string,\n        lastUpdated: string\n    },\n    season: {\n        id: number,\n        startDate: string,\n        endDate: string,\n        currentMatchday: number,\n        winner: null\n    },\n    teams: ITeam[]\n}\n\nexport interface ITeam {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    lastUpdated: string\n}\n\nexport type PlayersInfo = {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    activeCompetitions: [\n        {\n            id: number,\n            area: {\n                id: number,\n                name: string\n            },\n            name: string,\n            code: string,\n            plan: string,\n            lastUpdated: string\n        }\n    ],\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    squad: IPlayer\n}\n\nexport interface IPlayer {\n    id: number,\n    name: string,\n    position: string,\n    dateOfBirth: string,\n    countryOfBirth: string,\n    nationality: string,\n    shirtNumber: null,\n    role: string\n}\n","interface ICommonState {\n    fetching: boolean\n}\n\nconst initState = {\n    fetching: false,\n}\n\nexport const appReducer = (state: ICommonState = initState, action: ActionsType): ICommonState => {\n    switch (action.type) {\n        case 'APP/START_FETCHING': {\n            return {\n                ...state, fetching: true,\n            }\n        }\n        case 'APP/STOP_FETCHING': {\n            return {\n                ...state, fetching: false,\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n// export const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\n// export const setAppStatus = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\n// export const setAppInitialized = (value: boolean) => ({type: 'APP/SET-IS-INITIALIED', value} as const)\n\n\nexport const startFetching = () => ({type: 'APP/START_FETCHING'} as const)\nexport const stopFetching = () => ({type: 'APP/STOP_FETCHING'} as const)\n\nexport type StartFetchingActionType = ReturnType<typeof startFetching>\nexport type StopFetchingActionType = ReturnType<typeof stopFetching>\n\ntype ActionsType =\n    | StartFetchingActionType\n    | StopFetchingActionType\n\n","import {call, put} from \"redux-saga/effects\";\nimport {InferActionTypes} from \"../store\";\nimport {IPlayer, ITeam, TeamsAPI} from \"../../api/teams-api\";\nimport {startFetching, stopFetching} from \"../../app/app-reducer\";\n\nexport type ActionType = InferActionTypes<typeof actions>\n\n\nexport const actions = {\n    getTeams: (payload: ITeam[]) => ({\n        type: 'TEAMS/FETCH_TEAMS', payload\n    } as const),\n    getPlayers: (payload: IPlayer[]) => ({\n        type: 'TEAMS/FETCH_PLAYERS', payload\n    } as const),\n    addToFavoriteTeam: (name: string, teamId: number) => ({\n        type: 'FAVOURITES/ADD_TEAM', name, teamId\n    } as const),\n    addToFavoritePlayer: (name: string, playerId: number) => ({\n        type: 'FAVOURITES/ADD_PLAYER', name, playerId\n    } as const),\n    removeTeam: (id: number, name: string) => ({\n        type: 'FAVOURITES/REMOVE_TEAM', id, name\n    } as const),\n    removePlayer: (id: number, name: string) => ({\n        type: 'FAVOURITES/REMOVE_PLAYER', id, name\n    } as const)\n}\n\n//sagas\n\nexport function* fetchTeamsSaga() {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getTeams)\n    const teams = res.data.teams\n\n    yield put(actions.getTeams(teams))\n    yield put(stopFetching())\n\n}\n\nexport const fetchTeams = () => ({type: 'TEAMS/FETCH-TEAMS'})\n\nexport function* fetchPlayersSaga(action: ReturnType<typeof fetchPlayers>) {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getPlayersOfCurrentTeam, action.teamId)\n    const players = res.data.squad\n\n    yield put(actions.getPlayers(players))\n    yield put(stopFetching())\n\n}\n\nexport const fetchPlayers = (teamId: number) => ({type: 'TEAMS/FETCH-PLAYERS', teamId})\n\nexport function* addToFavoriteTeamSaga(action: ReturnType<typeof addTeamToFavourite>) {\n    yield put(actions.addToFavoriteTeam(action.name, action.teamId))\n\n}\n\nexport const addTeamToFavourite = (teamId: number, name: string) => ({type: 'FAVOURITES/ADD-TEAM', teamId, name})\n\nexport function* addToFavoritePlayerSaga(action: ReturnType<typeof addPlayerToFavourite>) {\n    yield put(actions.addToFavoritePlayer(action.name, action.playerId))\n\n}\n\nexport const addPlayerToFavourite = (playerId: number, name: string) => ({\n    type: 'FAVOURITES/ADD-PLAYER',\n    playerId,\n    name\n})\n\n\nexport function* removeTeamSaga(action: ReturnType<typeof removeTeam>) {\n    yield put(actions.removeTeam(action.id, action.name))\n}\n\nexport const removeTeam = (id: number, name: string) => ({type: 'FAVOURITES/REMOVE-TEAM', id, name})\n\nexport function* removePlayerSaga(action: ReturnType<typeof removeTeam>) {\n    yield put(actions.removePlayer(action.id, action.name))\n}\n\nexport const removePlayer = (id: number, name: string) => ({type: 'FAVOURITES/REMOVE-PLAYER', id, name})\n\n\n","import React from 'react';\n// @ts-ignore\nimport s from \"./Button.module.scss\";\n\ninterface IProps {\n    onClick: () => void,\n    title: string\n}\n\nexport const Btn = ({onClick, title}: IProps) => {\n    return (\n        <>\n            <button onClick={onClick} className={s.addBtn}>{title}</button>\n        </>\n    );\n};\n\n","export const getAvatarColor = (letter: string) => {\n    // @ts-ignore\n    const charCode = letter.charCodeAt();\n    if (charCode >= 65 && charCode <= 73) {\n        return {\n            background: '#F5D6D9',\n            color: '#F38181',\n        };\n    }\n    if (charCode >= 74 && charCode <= 80) {\n        return {\n            background: '#F8ECD5',\n            color: '#F1A32F',\n        };\n    }\n    if (charCode >= 81 && charCode <= 90) {\n        return {\n            background: '#DAD5F8',\n            color: '#816CFF',\n        };\n    }\n    return {\n        background: '#E9F5FF',\n        color: '#2A86FF',\n    };\n};\n","import React from 'react';\n// @ts-ignore\nimport s from './player.module.scss'\nimport {addPlayerToFavourite, fetchPlayers} from \"../../../redux/actions/actions\";\nimport {Btn} from \"../../../components/Button/Btn\";\nimport {useDispatch} from \"react-redux\";\nimport {getAvatarColor} from '../../../utils/getAvatarColor';\nimport styled from 'styled-components';\n\ninterface IProps {\n    name: string,\n    playerId: number\n}\n\nexport const Player = ({name, playerId}: IProps) => {\n    const dispatch = useDispatch()\n    const avatarColors = getAvatarColor(name[0].toUpperCase());\n\n    const onClickAdd = () => {\n        dispatch(addPlayerToFavourite(playerId, name))\n    }\n\n    return (\n        <div className={s.playerWrapper}>\n            <PlayerAvatar style={{\n                backgroundColor: avatarColors.background\n            }}>\n                <Letter style={{color: avatarColors.color}}>\n                    {name[0].toUpperCase()}\n                </Letter>\n            </PlayerAvatar>\n            <div className={s.player}>\n                <p>{name}</p>\n                <Btn onClick={onClickAdd} title={'+'}/>\n            </div>\n        </div>\n    );\n};\n\n\nexport const PlayerAvatar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 200px;\n  height: 200px;\n\n`\n\nexport const Letter = styled.p`\n  font-size: 30px;\n  font-weight: bold;\n  margin-top: -1px;\n`\n\n","export default __webpack_public_path__ + \"static/media/spin.7019bd74.svg\";","import React from 'react';\n// @ts-ignore\nimport spin from '../../assets/images/spin.svg';\n\nexport const Spin = () => {\n    return (\n        <div className={'spin-wrapper'}>\n            <img src={spin}/>\n        </div>\n    );\n};\n","import React from 'react';\n// @ts-ignore\nimport s from './container.module.scss'\n\ninterface IProps {\n    children: any\n}\n\nexport const Container = ({children}: IProps) => {\n    return (\n        <div className={s.wrapper}>\n            {children}\n        </div>\n    );\n};\n\n","import React, {useEffect} from 'react';\nimport {Player} from './Player/Player';\nimport {Spin} from \"../../components/Spin/Spin\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IPlayer} from \"../../api/teams-api\";\nimport {useHistory, useParams} from 'react-router-dom';\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport {Container} from \"../../components/Container/Container\";\nimport {fetchPlayers} from \"../../redux/actions/actions\";\n\ninterface IProps {\n    fetching: boolean,\n}\n\nexport const PlayersList = ({fetching}: IProps) => {\n    const players = useSelector<RootState, IPlayer[]>(state => state.teamInfoReducer.players)\n\n    let history = useHistory();\n    const dispatch = useDispatch()\n\n    const {teamId} = useParams<{ teamId: string }>()\n\n    const handleClick = () => {\n        history.push(\"/\");\n    }\n    useEffect(() => {\n        dispatch(fetchPlayers(+teamId))\n    }, [teamId])\n\n    return (\n        <>\n            {\n                fetching && <Spin/>\n            }\n            <Fade right>\n                <Container>\n                    {players.map(i => <Player name={i.name} key={i.id} playerId={i.id}/>)}\n                </Container>\n            </Fade>\n            <button className={'button'} onClick={handleClick}>Back</button>\n        </>\n    );\n};\n\n","import React, {useCallback, useState} from 'react';\nimport {useDispatch} from \"react-redux\";\n// @ts-ignore\nimport s from './team.module.scss'\nimport {addTeamToFavourite} from \"../../../redux/actions/actions\";\nimport {Btn} from \"../../../components/Button/Btn\";\nimport {Link} from 'react-router-dom';\n\ninterface IProps {\n    name: string,\n    teamId: number,\n}\n\nexport const Team = ({name, teamId}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onClickAdd = () => {\n        dispatch(addTeamToFavourite(teamId, name))\n\n    }\n\n\n    return (\n        <div className={s.teamWrapper}>\n            <Link to={`/players/${teamId}`} style={{textDecoration: 'none', color: '#666666', zIndex: 1}}>\n                <div className={s.teamAvatar}>\n                    <img src={`https://crests.football-data.org/${teamId}.svg`} alt=\"team\" title={'team'}\n                         style={{width: 200}}/>\n                </div>\n            </Link>\n            <div className={s.team}>\n                <p>{name}</p>\n                <Btn onClick={onClickAdd} title={'+'}/>\n            </div>\n        </div>\n    );\n};\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Team} from './Team/Team';\nimport {RootState} from \"../../redux/store\";\nimport {ITeam} from \"../../api/teams-api\";\nimport {Spin} from \"../../components/Spin/Spin\";\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\n// @ts-ignore\nimport s from './teamlist.module.scss'\nimport {fetchTeams} from \"../../redux/actions/actions\";\nimport {Container} from \"../../components/Container/Container\";\n\ninterface IProps {\n    fetching: boolean,\n}\n\nexport const TeamsList = ({fetching}: IProps) => {\n    const teams = useSelector<RootState, ITeam[]>(state => state.teamInfoReducer.teams)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchTeams())\n    }, [])\n\n    return (\n        <>\n            {\n                fetching && <Spin/>\n            }\n            <Fade right>\n                <Container>\n                    {teams.map(i => <Team name={i.name} key={i.id} teamId={i.id}/>)}\n                </Container>\n            </Fade>\n        </>\n    );\n};\n\n","import {ActionType} from \"../actions/actions\";\n\nexport interface IItem {\n    name: string,\n    id: number\n}\n\n\ntype InitialStateType = {\n    favoriteTeams: IItem[],\n    favoritePlayers: IItem[],\n\n}\n\nconst initialState: InitialStateType = {\n    favoriteTeams: [],\n    favoritePlayers: []\n}\n\nexport const profile = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case \"FAVOURITES/ADD_TEAM\":\n            let filteredStateByTeams = state.favoriteTeams.filter((i) => {\n                return i.id !== action.teamId\n            })\n            return {\n                ...state,\n                favoriteTeams: [...filteredStateByTeams, {name: action.name, id: action.teamId}]\n            }\n\n        case \"FAVOURITES/ADD_PLAYER\":\n            let filteredStateByPlayers = state.favoritePlayers.filter((i) => {\n                return i.id !== action.playerId\n            })\n            return {\n                ...state,\n                favoritePlayers: [...filteredStateByPlayers, {name: action.name, id: action.playerId}]\n            }\n        case \"FAVOURITES/REMOVE_TEAM\":\n            return {\n                ...state,\n                favoriteTeams: [...state.favoriteTeams.filter(i => i.id !== action.id)]\n            }\n        case \"FAVOURITES/REMOVE_PLAYER\":\n            return {\n                ...state,\n                favoritePlayers: [...state.favoritePlayers.filter(i => i.id !== action.id)]\n            }\n        default:\n            return state\n    }\n}\n","import {IPlayer, ITeam} from \"../../api/teams-api\";\nimport {ActionType} from \"../actions/actions\";\n\ntype InitialStateType = {\n    teams: ITeam[],\n    players: IPlayer[]\n}\n\nconst initialState:InitialStateType = {\n    teams: [],\n    players: []\n}\n\nexport const teamInfoReducer = (state:InitialStateType = initialState, action: ActionType):InitialStateType => {\n    switch (action.type) {\n        case 'TEAMS/FETCH_TEAMS':\n            return {\n                ...state, teams: action.payload\n            }\n        case 'TEAMS/FETCH_PLAYERS':\n            return {\n                ...state, players: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {applyMiddleware, compose} from 'redux';\nimport {combineReducers} from 'redux';\nimport {createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {takeEvery} from 'redux-saga/effects'\nimport {appReducer} from \"../app/app-reducer\";\nimport {\n    addToFavoritePlayerSaga,\n    addToFavoriteTeamSaga,\n    fetchPlayersSaga,\n    fetchTeamsSaga, removePlayerSaga,\n    removeTeamSaga\n} from \"./actions/actions\";\nimport {profile} from \"./reducers/profile\";\nimport {teamInfoReducer} from \"./reducers/teamInfo\";\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nlet reducers = combineReducers({\n    teamInfoReducer,\n    appReducer,\n    profile\n})\n\nexport type RootState = ReturnType<typeof reducers>\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\n\nexport const getStore = () => {\n    const persistConfig = {key: \"root\", storage};\n    const persistedReducer = persistReducer(persistConfig, reducers);\n\n    const sagaMiddleWare = createSagaMiddleware()\n\n// @ts-ignore\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleWare)));\n\n    const persistor = persistStore(store);\n\n    sagaMiddleWare.run(rootWatcher)\n\n    function* rootWatcher() {\n        yield takeEvery('TEAMS/FETCH-TEAMS', fetchTeamsSaga)\n        yield takeEvery('TEAMS/FETCH-PLAYERS', fetchPlayersSaga)\n        yield takeEvery('FAVOURITES/ADD-TEAM', addToFavoriteTeamSaga)\n        yield takeEvery('FAVOURITES/ADD-PLAYER', addToFavoritePlayerSaga)\n        yield takeEvery('FAVOURITES/REMOVE-TEAM', removeTeamSaga)\n        yield takeEvery('FAVOURITES/REMOVE-PLAYER', removePlayerSaga)\n    }\n\n    return {persistor, store};\n}\n\n","import React from 'react';\n// @ts-ignore\nimport style from './nav.module.scss';\n\ninterface IProps {\n\n}\n\n\nfunction Nav({}: IProps) {\n\n    return (\n        <div className={style.nav}>\n            <a href={'#/'}>Teams list</a>\n            <a href={'#/profile'}>Profile</a>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\n// @ts-ignore\nimport style from './Header.module.scss'\nimport Nav from '../../components/Nav/Nav';\n\ninterface IProps {\n\n}\n\nfunction Header({}: IProps) {\n\n    return (\n        <div className={style.header}>\n            <Nav/>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/userImage.65de8185.jpg\";","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Btn} from '../../../../components/Button/Btn';\nimport {removeTeam} from \"../../../../redux/actions/actions\";\n// @ts-ignore\nimport s from './favouriteTeam.module.scss'\n\ninterface IProps {\n    name: string\n    id: number\n}\n\nexport const FavouriteTeam = ({name, id}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onRemove = () => {\n        dispatch(removeTeam(id, name))\n    }\n\n    return (\n        <div className={s.team}>\n            <div>\n                <img src={`https://crests.football-data.org/${id}.svg`} alt=\"team-logo\" title={'team-logo'}\n                     style={{width: 50, height: 50}}/>\n                <p>{name}</p>\n            </div>\n            <Btn onClick={onRemove} title={'x'}/>\n        </div>\n    );\n};\n\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {removePlayer} from \"../../../../redux/actions/actions\";\n// @ts-ignore\nimport s from './favouritePlayer.module.scss'\nimport {Btn} from \"../../../../components/Button/Btn\";\nimport {Letter, PlayerAvatar} from \"../../../PlayersList/Player/Player\";\nimport {getAvatarColor} from \"../../../../utils/getAvatarColor\";\n\ninterface IProps {\n    name: string\n    id: number\n}\n\nexport const FavouritePlayer = ({name, id}: IProps) => {\n    const dispatch = useDispatch()\n    const avatarColors = getAvatarColor(name[0].toUpperCase());\n\n    const onRemove = () => {\n        dispatch(removePlayer(id, name))\n    }\n\n    return (\n        <div className={s.player}>\n            <div>\n                <PlayerAvatar style={{\n                    backgroundColor: avatarColors.background,\n                    width: 50, height: 50, marginRight:10\n                }}>\n                    <Letter style={{color: avatarColors.color, fontSize: 20, marginTop: 23}}>\n                        {name[0].toUpperCase()}\n                    </Letter>\n                </PlayerAvatar>\n                <p>{name}</p>\n            </div>\n            <Btn onClick={onRemove} title={'x'}/>\n        </div>\n    );\n};\n\n","import React from 'react';\n// @ts-ignore\nimport s from './ProfileInfo.module.scss';\n// @ts-ignore\nimport userImage from \"../../../assets/images/userImage.jpg\";\nimport {IItem} from \"../../../redux/reducers/profile\";\nimport {FavouriteTeam} from \"./FavouriteTeam/FavouriteTeam\";\nimport {FavouritePlayer} from './FavouritePlayer/FavooritePlayer';\n\ninterface IProps {\n    teamsInfo: IItem[],\n    playersInfo: IItem[]\n}\n\nconst ProfileInfo = ({teamsInfo, playersInfo}: IProps) => {\n\n    return (\n        <div className={s.descriptionBlock}>\n            <div className={s.avatarWrapper}>\n                <img src={userImage} className={s.pageAvatar}/>\n            </div>\n            <div className={s.infoWrapper}>\n                <div className={s.fullname}>\n                    <p>Andrei Kulik</p>\n                </div>\n                <div className={s.teams}>\n                    <p style={{fontWeight: \"bold\"}}>Favourite teams: </p>\n                    {teamsInfo.length ? teamsInfo.map((i: IItem) => <FavouriteTeam key={i.id} name={i.name}\n                                                                                   id={i.id}/>) : 'no favourites'}\n                </div>\n                <div className={s.players}>\n                    <p style={{fontWeight: \"bold\"}}>Favourite players: </p>\n                    {playersInfo.length ? playersInfo.map((i: IItem) => <FavouritePlayer key={i.id} name={i.name}\n                                                                                         id={i.id}/>) : 'no favourites'}\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IItem} from \"../../redux/reducers/profile\";\n\ninterface IProps  {\n\n}\n\nexport const Profile = (props: IProps) => {\n    const teamsInfo = useSelector<RootState, IItem[]>(state => state.profile.favoriteTeams)\n    const playersInfo = useSelector<RootState, IItem[]>(state => state.profile.favoritePlayers)\n\n    return (\n        <div>\n            <ProfileInfo teamsInfo={teamsInfo} playersInfo={playersInfo}/>\n        </div>\n\n    )\n\n}\n","import React from 'react';\nimport {PlayersList} from '../features/PlayersList/PlayersList';\nimport {TeamsList} from '../features/TeamsList/TeamsList';\nimport './App.css';\nimport {useSelector} from \"react-redux\";\nimport {getStore, RootState} from \"../redux/store\";\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Header from \"../features/Header/Header\";\nimport {Profile} from '../features/Profile/Profile';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nconst App = () => {\n    const fetching = useSelector<RootState, boolean>(state => state.appReducer.fetching)\n    const {persistor} = getStore();\n\n    return (\n        <>\n            <PersistGate persistor={persistor}>\n                <Header/>\n                <HashRouter>\n                    <div className=\"app-wrapper\">\n                        <Switch>\n                            <Route exact path={'/'} render={() => <TeamsList fetching={fetching}/>}/>\n                            <Route path={'/players/:teamId'} render={() => <PlayersList fetching={fetching}/>}/>\n                            <Route path={'/profile'} render={() => <Profile/>}/>\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </PersistGate>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from \"./app/App\";\nimport {Provider} from 'react-redux';\nimport {getStore} from \"./redux/store\";\n\nconst { store, persistor } = getStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}