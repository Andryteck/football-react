{"version":3,"sources":["features/PlayersList/Player/player.module.scss","features/TeamsList/Team/team.module.scss","features/Profile/ProfileInfo/ProfileInfo.module.scss","components/Button/BtnAdd.module.scss","features/Header/Header.module.scss","components/Nav/nav.module.scss","api/teams-api.ts","app/app-reducer.ts","redux/actions/actions.ts","components/Button/BtnAdd.tsx","features/PlayersList/Player/Player.tsx","assets/images/spin.svg","components/Spin/Spin.tsx","features/PlayersList/PlayersList.tsx","features/TeamsList/Team/Team.tsx","features/TeamsList/TeamsList.tsx","redux/reducers/profile.ts","redux/reducers/teamInfo.ts","redux/store.ts","components/Nav/Nav.tsx","features/Header/Header.tsx","assets/images/userImage.jpg","features/Profile/ProfileInfo/FavouriteTeam/FavouriteTeam.tsx","features/Profile/ProfileInfo/ProfileInfo.tsx","features/Profile/Profile.tsx","app/App.tsx","index.tsx"],"names":["module","exports","instance","axios","create","baseURL","headers","TeamsAPI","get","teamId","initState","fetching","fetchTeamsSaga","fetchPlayersSaga","addToFavoriteTeamSaga","addToFavoritePlayerSaga","removeTeamSaga","actions","payload","type","name","playerId","id","put","call","res","teams","data","action","players","squad","BtnAdd","onClick","title","className","s","addBtn","Player","dispatch","useDispatch","playerWrapper","player","addPlayerToFavourite","Spin","src","spin","PlayersList","useSelector","state","teamInfoReducer","history","useHistory","right","map","i","push","Team","teamWrapper","to","style","textDecoration","color","fetchPlayers","team","addTeamToFavourite","TeamsList","useEffect","initialState","favoriteTeams","favoritePlayers","reducers","combineReducers","appReducer","profile","filteredStateByTeams","filter","filteredStateByPlayers","getStore","rootWatcher","persistConfig","key","storage","persistedReducer","persistReducer","sagaMiddleWare","createSagaMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","persistor","persistStore","takeEvery","run","Nav","nav","href","Header","header","FavouriteTeam","removeTeam","ProfileInfo","teamsInfo","playersInfo","descriptionBlock","userImage","pageAvatar","fontWeight","length","Profile","props","App","exact","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.140808f8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"playerWrapper\":\"player_playerWrapper__UbETO\",\"player\":\"player_player__3gfDg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"teamWrapper\":\"team_teamWrapper__2Z_hY\",\"team\":\"team_team__ZaEf6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__AC4Jg\",\"pageAvatar\":\"ProfileInfo_pageAvatar__2Maiq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addBtn\":\"BtnAdd_addBtn__1aTgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__22rC9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"nav_nav__VnbBu\"};","import axios from 'axios';\n\nconst settings = {\n    headers: {\n        'X-Auth-Token': '15a24cc3edfb4c64a66c0214e356ebe7',\n    },\n};\n\nconst instance = axios.create({\n    baseURL: 'https://api.football-data.org/v2/',\n    ...settings,\n});\n\nexport const TeamsAPI = {\n    getTeams() {\n        return instance.get<TeamsInfo>('competitions/2017/teams')\n    },\n    getPlayersOfCurrentTeam(teamId: number) {\n        return instance.get<PlayersInfo>(`teams/${teamId}`)\n    },\n}\n\n\n//types\n\nexport type TeamsInfo = {\n    count: number,\n    filters: {},\n    competition: {\n        id: number,\n        area: {\n            id: number, name: string\n        },\n        name: string,\n        code: string,\n        plan: string,\n        lastUpdated: string\n    },\n    season: {\n        id: number,\n        startDate: string,\n        endDate: string,\n        currentMatchday: number,\n        winner: null\n    },\n    teams: ITeam[]\n}\n\nexport interface ITeam {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    lastUpdated: string\n}\n\nexport type PlayersInfo = {\n    id: number,\n    area: {\n        id: number,\n        name: string\n    },\n    activeCompetitions: [\n        {\n            id: number,\n            area: {\n                id: number,\n                name: string\n            },\n            name: string,\n            code: string,\n            plan: string,\n            lastUpdated: string\n        }\n    ],\n    name: string,\n    shortName: string,\n    tla: string,\n    crestUrl: string,\n    address: string,\n    phone: string,\n    website: string,\n    email: string,\n    founded: number,\n    clubColors: string,\n    venue: string,\n    squad: IPlayer\n}\n\nexport interface IPlayer {\n    id: number,\n    name: string,\n    position: string,\n    dateOfBirth: string,\n    countryOfBirth: string,\n    nationality: string,\n    shirtNumber: null,\n    role: string\n}\n","interface ICommonState {\n    fetching: boolean\n}\n\nconst initState = {\n    fetching: false,\n}\n\nexport const appReducer = (state: ICommonState = initState, action: ActionsType): ICommonState => {\n    switch (action.type) {\n        case 'APP/START_FETCHING': {\n            return {\n                ...state, fetching: true,\n            }\n        }\n        case 'APP/STOP_FETCHING': {\n            return {\n                ...state, fetching: false,\n            }\n        }\n        default:\n            return state\n    }\n}\n\n\n// export const setAppError = (error: string | null) => ({type: 'APP/SET-ERROR', error} as const)\n// export const setAppStatus = (status: RequestStatusType) => ({type: 'APP/SET-STATUS', status} as const)\n// export const setAppInitialized = (value: boolean) => ({type: 'APP/SET-IS-INITIALIED', value} as const)\n\n\nexport const startFetching = () => ({type: 'APP/START_FETCHING'} as const)\nexport const stopFetching = () => ({type: 'APP/STOP_FETCHING'} as const)\n\nexport type StartFetchingActionType = ReturnType<typeof startFetching>\nexport type StopFetchingActionType = ReturnType<typeof stopFetching>\n\ntype ActionsType =\n    | StartFetchingActionType\n    | StopFetchingActionType\n\n","import {call, put} from \"redux-saga/effects\";\nimport {InferActionTypes} from \"../store\";\nimport {IPlayer, ITeam, TeamsAPI} from \"../../api/teams-api\";\nimport {startFetching, stopFetching} from \"../../app/app-reducer\";\n\nexport type ActionType = InferActionTypes<typeof actions>\n\n\nexport const actions = {\n    getTeams: (payload: ITeam[]) => ({\n        type: 'TEAMS/FETCH_TEAMS', payload\n    } as const),\n    getPlayers: (payload: IPlayer[]) => ({\n        type: 'TEAMS/FETCH_PLAYERS', payload\n    } as const),\n    addToFavoriteTeam: (name: string, teamId: number) => ({\n        type: 'FAVOURITES/ADD_TEAM', name, teamId\n    } as const),\n    addToFavoritePlayer: (name: string, playerId: number) => ({\n        type: 'FAVOURITES/ADD_PLAYER', name, playerId\n    } as const),\n    removeTeam: (id: number, name: string) => ({\n        type: 'FAVOURITES/REMOVE_TEAM', id, name\n    } as const)\n}\n\n//sagas\n\nexport function* fetchTeamsSaga() {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getTeams)\n    const teams = res.data.teams\n\n    yield put(actions.getTeams(teams))\n    yield put(stopFetching())\n\n}\n\nexport const fetchTeams = () => ({type: 'TEAMS/FETCH-TEAMS'})\n\nexport function* fetchPlayersSaga(action: ReturnType<typeof fetchPlayers>) {\n    yield put(startFetching())\n\n    const res = yield call(TeamsAPI.getPlayersOfCurrentTeam, action.teamId)\n    const players = res.data.squad\n\n    yield put(actions.getPlayers(players))\n    yield put(stopFetching())\n\n}\n\nexport const fetchPlayers = (teamId: number) => ({type: 'TEAMS/FETCH-PLAYERS', teamId})\n\nexport function* addToFavoriteTeamSaga(action: ReturnType<typeof addTeamToFavourite>) {\n    yield put(actions.addToFavoriteTeam(action.name, action.teamId))\n\n}\n\nexport const addTeamToFavourite = (teamId: number, name: string) => ({type: 'FAVOURITES/ADD-TEAM', teamId, name})\n\nexport function* addToFavoritePlayerSaga(action: ReturnType<typeof addPlayerToFavourite>) {\n    yield put(actions.addToFavoritePlayer(action.name, action.playerId))\n\n}\n\nexport const addPlayerToFavourite = (playerId: number, name: string) => ({\n    type: 'FAVOURITES/ADD-PLAYER',\n    playerId,\n    name\n})\n\n\nexport function* removeTeamSaga(action: ReturnType<typeof removeTeam>) {\n    yield put(actions.removeTeam(action.id, action.name))\n}\n\nexport const removeTeam = (id: number, name: string) => ({type: 'FAVOURITES/REMOVE-TEAM', id, name})\n\n\n","import React from 'react';\n// @ts-ignore\nimport s from \"./BtnAdd.module.scss\";\n\ninterface IProps {\n    onClick: () => void,\n    title: string\n}\n\nexport const BtnAdd = ({onClick, title}: IProps) => {\n    return (\n        <>\n            <button onClick={onClick} className={s.addBtn}>{title}</button>\n        </>\n    );\n};\n\n","import React from 'react';\n// @ts-ignore\nimport s from './player.module.scss'\nimport {addPlayerToFavourite} from \"../../../redux/actions/actions\";\nimport {BtnAdd} from \"../../../components/Button/BtnAdd\";\nimport {useDispatch} from \"react-redux\";\n\ninterface IProps {\n    name: string,\n    playerId: number\n}\n\nexport const Player = ({name, playerId}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onClickAdd = () => {\n        dispatch(addPlayerToFavourite(playerId, name))\n    }\n    return (\n        <div className={s.playerWrapper}>\n            <div className={s.player}>\n                {name}\n            </div>\n            <BtnAdd onClick={onClickAdd} title={'+'}/>\n        </div>\n    );\n};\n\n","export default __webpack_public_path__ + \"static/media/spin.7019bd74.svg\";","import React from 'react';\n// @ts-ignore\nimport spin from '../../assets/images/spin.svg';\n\nexport const Spin = () => {\n    return (\n        <div className={'spin-wrapper'}>\n            <img src={spin}/>\n        </div>\n    );\n};\n","import React from 'react';\nimport {Player} from './Player/Player';\nimport {Spin} from \"../../components/Spin/Spin\";\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IPlayer} from \"../../api/teams-api\";\nimport {useHistory} from 'react-router-dom';\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\n\ninterface IProps {\n    fetching: boolean,\n}\n\nexport const PlayersList = ({fetching}: IProps) => {\n    const players = useSelector<RootState, IPlayer[]>(state => state.teamInfoReducer.players)\n    let history = useHistory();\n\n    const handleClick = () => {\n        history.push(\"/\");\n    }\n\n    return (\n        <>\n            {\n                fetching && <Spin/>\n            }\n            <Fade right>\n            <div>\n                {players.map(i => <Player name={i.name} key={i.id} playerId={i.id}/>)}\n            </div>\n            </Fade>\n            <button className={'button'} onClick={handleClick}>Back</button>\n        </>\n    );\n};\n\n","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {Link} from 'react-router-dom';\n// @ts-ignore\nimport s from './team.module.scss'\nimport {addTeamToFavourite, fetchPlayers} from \"../../../redux/actions/actions\";\nimport {BtnAdd} from \"../../../components/Button/BtnAdd\";\n\ninterface IProps {\n    name: string,\n    teamId: number\n}\n\nexport const Team = ({name, teamId}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onClickHandler = () => {\n        dispatch(fetchPlayers(teamId))\n\n    }\n    const onClickAdd = () => {\n        dispatch(addTeamToFavourite(teamId, name))\n\n    }\n\n    return (\n        <div className={s.teamWrapper}>\n            <Link to={`/players/${teamId}`} style={{textDecoration: 'none', color: '#666666'}}>\n                <div onClick={onClickHandler} className={s.team}>\n                    {name}\n                </div>\n            </Link>\n            <BtnAdd onClick={onClickAdd} title={'+'}/>\n        </div>\n    );\n};\n\n","import React, {useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {Team} from './Team/Team';\nimport {RootState} from \"../../redux/store\";\nimport {ITeam} from \"../../api/teams-api\";\nimport {Spin} from \"../../components/Spin/Spin\";\n// @ts-ignore\nimport Fade from 'react-reveal/Fade';\nimport {fetchTeams} from \"../../redux/actions/actions\";\n\ninterface IProps {\n    fetching: boolean,\n}\n\nexport const TeamsList = ({fetching}: IProps) => {\n    const teams = useSelector<RootState, ITeam[]>(state => state.teamInfoReducer.teams)\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(fetchTeams())\n    }, [])\n    return (\n        <>\n                {\n                    fetching && <Spin/>\n                }\n            <Fade right>\n                <div>\n                    {teams.map(i => <Team name={i.name} key={i.id} teamId={i.id}/>)}\n                </div>\n            </Fade>\n        </>\n    );\n};\n\n","import {ActionType} from \"../actions/actions\";\n\nexport interface IItem {\n    name: string,\n    id: number\n}\n\n\ntype InitialStateType = {\n    favoriteTeams: IItem[],\n    favoritePlayers: IItem[],\n\n}\n\nconst initialState: InitialStateType = {\n    favoriteTeams: [],\n    favoritePlayers: []\n}\n\nexport const profile = (state: InitialStateType = initialState, action: ActionType): InitialStateType => {\n    switch (action.type) {\n        case \"FAVOURITES/ADD_TEAM\":\n            let filteredStateByTeams = state.favoriteTeams.filter((i) => {\n                return i.id !== action.teamId\n            })\n            return {\n                ...state,\n                favoriteTeams: [...filteredStateByTeams, {name: action.name, id: action.teamId}]\n            }\n\n        case \"FAVOURITES/ADD_PLAYER\":\n            let filteredStateByPlayers = state.favoritePlayers.filter((i) => {\n                return i.id !== action.playerId\n            })\n            return {\n                ...state,\n                favoritePlayers: [...filteredStateByPlayers, {name: action.name, id: action.playerId}]\n            }\n        case \"FAVOURITES/REMOVE_TEAM\":\n            return {\n                ...state,\n                favoriteTeams: [...state.favoriteTeams.filter(i => i.id !== action.id)]\n            }\n        default:\n            return state\n    }\n}\n","import {IPlayer, ITeam} from \"../../api/teams-api\";\nimport {ActionType} from \"../actions/actions\";\n\ntype InitialStateType = {\n    teams: ITeam[],\n    players: IPlayer[]\n}\n\nconst initialState:InitialStateType = {\n    teams: [],\n    players: []\n}\n\nexport const teamInfoReducer = (state:InitialStateType = initialState, action: ActionType):InitialStateType => {\n    switch (action.type) {\n        case 'TEAMS/FETCH_TEAMS':\n            return {\n                ...state, teams: action.payload\n            }\n        case 'TEAMS/FETCH_PLAYERS':\n            return {\n                ...state, players: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {applyMiddleware, compose} from 'redux';\nimport {combineReducers} from 'redux';\nimport {createStore} from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport {takeEvery} from 'redux-saga/effects'\nimport {appReducer} from \"../app/app-reducer\";\nimport {\n    addToFavoritePlayerSaga,\n    addToFavoriteTeamSaga,\n    fetchPlayersSaga,\n    fetchTeamsSaga,\n    removeTeamSaga\n} from \"./actions/actions\";\nimport {profile} from \"./reducers/profile\";\nimport {teamInfoReducer} from \"./reducers/teamInfo\";\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nlet reducers = combineReducers({\n    teamInfoReducer,\n    appReducer,\n    profile\n})\n\nexport type RootState = ReturnType<typeof reducers>\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\n\nexport const getStore = () => {\n    const persistConfig = {key: \"root\", storage};\n    const persistedReducer = persistReducer(persistConfig, reducers);\n\n    const sagaMiddleWare = createSagaMiddleware()\n\n// @ts-ignore\n    const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    const store = createStore(persistedReducer, composeEnhancers(applyMiddleware(sagaMiddleWare)));\n\n    const persistor = persistStore(store);\n\n    sagaMiddleWare.run(rootWatcher)\n\n    function* rootWatcher() {\n        yield takeEvery('TEAMS/FETCH-TEAMS', fetchTeamsSaga)\n        yield takeEvery('TEAMS/FETCH-PLAYERS', fetchPlayersSaga)\n        yield takeEvery('FAVOURITES/ADD-TEAM', addToFavoriteTeamSaga)\n        yield takeEvery('FAVOURITES/ADD-PLAYER', addToFavoritePlayerSaga)\n        yield takeEvery('FAVOURITES/REMOVE-TEAM', removeTeamSaga)\n    }\n\n    return {persistor, store};\n}\n\n","import React from 'react';\n// @ts-ignore\nimport style from './nav.module.scss';\n\ninterface IProps {\n\n}\n\n\nfunction Nav({}: IProps) {\n\n    return (\n        <div className={style.nav}>\n            <a href={'#/'}>Teams list</a>\n            <a href={'#/profile'}>Profile</a>\n        </div>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\n// @ts-ignore\nimport style from './Header.module.scss'\nimport Nav from '../../components/Nav/Nav';\n\ninterface IProps {\n\n}\n\nfunction Header({}: IProps) {\n\n    return (\n        <div className={style.header}>\n            <Nav/>\n        </div>\n    );\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/userImage.65de8185.jpg\";","import React from 'react';\nimport {useDispatch} from \"react-redux\";\nimport {removeTeam} from \"../../../../redux/actions/actions\";\n\n\ninterface IProps {\n    name: string\n    id: number\n}\n\nexport const FavouriteTeam = ({name, id}: IProps) => {\n    const dispatch = useDispatch()\n\n    const onRemove = () => {\n        dispatch(removeTeam(id, name))\n    }\n\n    return (\n        <div>\n            <p>{name}</p>\n            <button onClick={onRemove}>Remove</button>\n        </div>\n    );\n};\n\n","import React from 'react';\n// @ts-ignore\nimport s from './ProfileInfo.module.scss';\n// @ts-ignore\nimport userImage from \"../../../assets/images/userImage.jpg\";\nimport {IItem} from \"../../../redux/reducers/profile\";\nimport {FavouriteTeam} from \"./FavouriteTeam/FavouriteTeam\";\n\ninterface IProps {\n    teamsInfo: IItem[],\n    playersInfo: IItem[]\n}\n\nconst ProfileInfo = ({teamsInfo, playersInfo}: IProps) => {\n\n    return (\n        <div>\n            <div className={s.descriptionBlock}>\n                <img src={userImage} className={s.pageAvatar}/>\n                <div>\n                    <p style={{fontWeight: \"bold\"}}>Full name:</p>\n                    <p>Andrei Kulik</p>\n                </div>\n                <div>\n                    <p style={{fontWeight: \"bold\"}}>Favourite teams: </p>\n                    {teamsInfo.length ? teamsInfo.map((i: IItem) => <FavouriteTeam key={i.id} name={i.name} id={i.id}/>) : 'no favourites'}\n                </div>\n                <div>\n                    <p style={{fontWeight: \"bold\"}}>Favourite players: </p>\n                    {playersInfo.length ? playersInfo.map((i: IItem) => <p key={i.id}>{i.name}</p>) : 'no favourites'}\n\n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default ProfileInfo\n","import React from 'react';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport {useSelector} from \"react-redux\";\nimport {RootState} from \"../../redux/store\";\nimport {IItem} from \"../../redux/reducers/profile\";\n\ninterface IProps  {\n\n}\n\nexport const Profile = (props: IProps) => {\n    const teamsInfo = useSelector<RootState, IItem[]>(state => state.profile.favoriteTeams)\n    const playersInfo = useSelector<RootState, IItem[]>(state => state.profile.favoritePlayers)\n    return (\n        <div>\n            <ProfileInfo teamsInfo={teamsInfo} playersInfo={playersInfo}/>\n        </div>\n\n    )\n\n}\n","import React from 'react';\nimport {PlayersList} from '../features/PlayersList/PlayersList';\nimport {TeamsList} from '../features/TeamsList/TeamsList';\nimport './App.css';\nimport {useSelector} from \"react-redux\";\nimport {getStore, RootState} from \"../redux/store\";\nimport {HashRouter, Route, Switch} from 'react-router-dom';\nimport Header from \"../features/Header/Header\";\nimport {Profile} from '../features/Profile/Profile';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nconst App = () => {\n    const fetching = useSelector<RootState, boolean>(state => state.appReducer.fetching)\n    const {persistor} = getStore();\n\n    return (\n        <>\n            <PersistGate persistor={persistor}>\n                <Header/>\n                <HashRouter>\n                    <div className=\"app-wrapper\">\n                        <Switch>\n                            <Route exact path={'/'} render={() => <TeamsList fetching={fetching}/>}/>\n                            <Route path={'/players/:number'} render={() => <PlayersList fetching={fetching}/>}/>\n                            <Route path={'/profile'} render={() => <Profile/>}/>\n                        </Switch>\n                    </div>\n                </HashRouter>\n            </PersistGate>\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from \"./app/App\";\nimport {Provider} from 'react-redux';\nimport {getStore} from \"./redux/store\";\n\nconst { store, persistor } = getStore();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App/>\n    </Provider>,\n    document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}